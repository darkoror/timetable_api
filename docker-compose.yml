version: "3.9"

services:
  postgres:
    container_name: timetable_postgres
    image: postgres:13.0-alpine
    env_file:
      - .env
    ports:
      - 127.0.0.1:5432:5432
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  redis:
    container_name: timetable_redis
    image: redis:6.0.5
    ports:
      - 127.0.0.1:6379:6379
    volumes:
      - redis_data:/data

  api:
    build:
      context: .
      dockerfile: Dockerfile
    image: timetable_image
    container_name: timetable_api
    command: bash -c "./entrypoint.sh; daphne -b 0.0.0.0 -p 8000 timetable.asgi:application"
    volumes:
      - .:/usr/src/app/
      - logs:/usr/src/app/.data/logs
      - media:/usr/src/app/media
      - static:/usr/src/app/static
    ports:
      - 127.0.0.1:8000:8000
    env_file:
      - .env
    depends_on:
      - postgres
      - redis

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    image: timetable_image
    container_name: timetable_celery
    command: celery -A timetable worker --loglevel=info -B
    volumes:
      - .:/usr/src/app/
    env_file:
      - .env
    depends_on:
      - api
      - redis
      - postgres

#  nginx:
#    image: nginx:latest
#    container_name: timetable_nginx
#    restart: always
#    ports:
#      - 80:80
#      - 443:443
#    env_file:
#      - .env
#    volumes:
#      - ./.config:/etc/nginx/conf.d/:ro
#      - ./certbot/www:/var/www/certbot/:ro
#      - ./certbot/conf/:/etc/nginx/ssl/:ro
#      # Bind your static and media folders with Nginx container
#      - ./media:/usr/src/app/media
#      - ./assets:/usr/src/app/assets
#    depends_on:
#      - api

#  certbot:
#    image: certbot/certbot:latest
#    volumes:
#      - ./certbot/www/:/var/www/certbot/:rw
#      - ./certbot/conf/:/etc/letsencrypt/:rw


volumes:
  postgres_data:
  redis_data:
  logs:
  media:
  static:
